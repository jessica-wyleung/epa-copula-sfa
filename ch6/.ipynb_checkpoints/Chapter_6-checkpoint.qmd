---
execute:
  keep-ipynb: true
jupyter: python3
---

# Chapter 6: Modelling Dependence in Production Systems

## Exercise 6.1: The SL79 and SL80 estimators for US utilities.

This exercise implements the SL79 and SL80 estimators for the U.S. utilities dataset steamelectric.xls. The data for this exercise is the same as the data used by Rungsuriyawiboon and Stefanou (2007) and Amsler et al. (2021). The output variable is net power generated, in megawatt-hours; the inputs are fuel, labor and maintenance (L&M), and capital; the input prices are (i) the average fuel price in dollars per BTU, (ii) cost-share weighted price of labor and maintenance, where the price of labor is company-wide average wage rate and the price of maintenance is a price index of electrical supplies from the Bureau of Labor Statistics, and (iii) the yield of the latest debt issued by the firm. Quantities of fuel, L&M and capital are computed by dividing the reported fuel expenses, aggregate L&M costs and capital costs by the relevant prices. The dataset contained 1008 observations but upon data cleaning as described by Amsler et al. (2021) we ended up with 934 observations. All of the parameters are as defined earlier; in addition, $\mu_{j}$'s are the means of the allocative inefficiencies $\omega_{j}$’s which are permitted to be non-zero. We report both the “OPG” and robust “sandwich” versions (Rob) of the standard errors (see Appendix 4.B).

```{python}

def loglikelihood(coefs, y, x1, x2, x3, x4):

def estimate_SL79():
    
    # Starting values
    alpha = -2
    beta1 = 0.5
    beta2 = 0.15
    beta3 = 0.2
    sigma2u = 0.01
    sigma2v = 0.002
    sigma2w2 = 0.01
    sigma2w3 = 0.01
    rho = 0 
    mu2 = 0.3
    mu3 = 0.3

    theta0 = np.array([alpha beta1 beta2 beta3 sigma2u sigma2v sigma2w2 sigma2w3 np.log((1+rho)/(1-rho)) mu])
    
    # Bounds to ensure sigma2v and sigma2u are positive
    bounds = [(None, None) for x in range(4)] + [(1e-6, np.inf), (1e-6, np.inf)]

    # Minimize the negative log-likelihood using numerical optimization.
    MLE_results = minimize(
        fun=loglikelihood,
        x0=theta0,
        method="L-BFGS-B",
        tol = 1e-6,
        options={"ftol": 1e-6, "maxiter": 1000, "maxfun": 6*1000, "maxcor": 500},
        args=(y, x1, x2, x3, x4),
        bounds=bounds,
    )
```

```{python}
# import data
data = pd.read_excel('steamelectric.xls', sheet_name='Data72F')

data['fuel_price_index'] = data.loc[0:-1, 'Fuel Price ($/BTU)']/data.iloc[1:,'Fuel Price ($/BTU)']
data['LM_price_index'] = data.loc[0:-1, 'Price of Labor and Maintenance']/data.iloc[1:,'Price of Labor and Maintenance']

data_.iloc[13:14:1008, :] = [] #drop last fuel price index for each plant

data_(isnan(data_(:,4)), :) = []; % plant 10 year 98 gives NAN for fuel index
data_(isnan(data_(:,17)), :) = []; % plan 10 year 97 gives NAN for LM index

X1 = data_['Fuel Costs ($1000)']/data['fuel_price_index']*1000*1e-6; #fuel costs over price index
X2 = data_['Operating Costs ($1000)']/data['LM_price_index']*1000*1e-6; #LM costs over price index
X3 = data_['Capital ($1000)']/1000; # capital
Y = data_['Output (MWhr)']*1e-6; # output ml MWpH 

p1 = np.log(data['fuel_price_index'])
p2 = np.log(data['LM_price_index'])
p3 = np.log(data['Capital ($1000)'])


```


```{python}
# Remove all previous function and variable definitions before the next exercise
%reset
```

## Exercise 6.2: The APS2A and APS2B Copulas

Exercise 6.2 demonstrates how to simulate from and estimate APS2A and APS2B copulas. We generate scatterplots of 1,000 observations simulated using the APS2A and APS2B copulas, respectively. The value of $\theta$ is set at 0.35 for simulation from APS2A and at 0.8 for simulation from APS2B. We report the correlation between $u$ and $\omega$, which is approximately zero, and the correlation between $u$ and $|\omega|$ which is positive. We also report the values of $\theta$ estimated using the MLE on the simulated data.



```{python}
# Remove all previous function and variable definitions before the next exercise
%reset
```

## Exercise 6.3: The APS3A and APS3B estimators for US utilities

This exercise estimates the model in (6.1)-(6.2) using MSLE with the APS- 3-A and APS-3-B copulas on the same dataset as in Exercise 6.1. The number of replications for the simulation of the likelihood is 1,000. The results are similar to each other and to our estimates of the Schmidt and Lovell (1980) model reported in Exercise 6.1. As in Exercise 6.1, “OPG” stands for the expected outer-product of gradient and “Rob” stands for the robust version of the standard errors.




```{python}
# Remove all previous function and variable definitions before the next exercise
%reset
```

## Exercise 6.4 Vine APS-2-copula estimates for the 111 US utilities.

This exercise estimates the model in (6.1)-(6.2) using MSLE with the vine copulas based on the APS-2-A and APS-2-B copulas. The data file is cowing.xlsx which was also used in Chapter 2. Table 6.3 reports the results. We also report the estimates based on the APS3 copula for this dataset. The copula dependence parameter estimates are, for the most part, large in magnitude but statistically insignificant for this example.




```{python}
# Remove all previous function and variable definitions before the next exercise
%reset
```

